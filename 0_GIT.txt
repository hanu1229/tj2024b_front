[Github]
    1. https://github.com
    2. 버전관리 서비스 (VCS)
    3. 소스코드를 GITHUB 서버에 저장하고 다른 사람과 동시에 병렬로 관리가 가능하다.
    4. 특징
        1. 소프트웨어 개발에서 소스코드를 효과적으로 관리, 무료
        2. 개발 프로젝트내 폴더 작업을 기록하거 버전(과거)관리
        3. 여러 사람들과 동일한 프로젝트(저장소-리포지토리)를 병렬로 작업이 가능하다.
    5. 대표 용어
        1. Repository : 저장소 / 프로젝트의 파일이나 폴더를 저장하는 저장소
        2. commit : 파일을 추가/변경된 내용을 저장소에 저장하는 작업
        3. push : 추가/변경된 내용을 원격(github서버)저장소에 업로드 작업
    6. 저장소를 만드는 사람/계정, 파일 commit/push 이름/이메일(서명) 별도 존재한다.

[vscode와 github연동]
    1. github로 부터 회원가입 진행
    2. git 설치 : https://git-scm.com/downloads/win
    3. 64bit로 설치
    4. 설치 후 vscode 재실행, 왼쪽 메뉴에 소스제어탭 클릭
    5. [github 게시] -> [로그인] -> 웹페이지[git]로그인 진행 -> [continue]
    6. publish to Github public repository [본인아이디]/프로젝트명(최상위폴더명)
    ---> 최초 git 사용시 : git에서 'user.name' 및 'user.email'를 구성해야 합니다. 창이 나옵니다.
    7. [vscode 상단메뉴] -> [터미널] -> [새 터미널] -> [+] 옆 [V] 클릭 -> [git bash]클릭
    8. [git user.name 확인] --> git config --global user.name
       [git user.name 설정] --> git config --global user.name git아이디
       [git user.email 확인] --> git config --global user.email
       [git user.email 설정] --> git config --global user.email git이메일
    9. [vscode 왼쪽 메뉴]에 [소스제어]탭 클릭 --> [메시지 입력칸 = 기록하는 이유 작성]
        계속 커밋이 안되고 있다면 vscode를 재실행한다.

    10. [커밋 및 푸시]
        
[GIT PAGE]
    - git회사에서 코드 저장소(리포지토리)의 코드를 호스팅 할 수 있는 기능
    1. 호스팅할 저장소의 메인페이지 파일명을 'index.html'로 작성
    2. 본인 github 홈페이지 접속
    3. new repository 생성
        - new repository 클릭
        - repository name : 아무렇게나
        - Public으로 설정
        - create repository 클릭
    4. github홈페이지 생성
        - Quick setup에 uploading an existing file 클릭
        - index.html 파일을 드래그해서 업로드(CSS/JS포함)
        - Commit changes 클릭
        - 업로드 후 setting 클릭
        - 사이드메뉴에 pages 클릭
        - Branch 항목에서 None과 Save를 main과 /(root)로 설정후 Save 클릭
        - Github Pages source saved! 알림이 뜨고 2~3분뒤 주소를 준다.

[로컬 저장소(내PC), 원격 저장소(github server)]
    - https://github.com/hanu1229/tj2024b_front (원격 저장소) : 깃허브 회사의 서버실에 코드 저장
        - clone(복제)   : 원격 저장소로부터 로컬 저장소로 가져오는 행위
        - commit(완료)  : 로컬 저장소로부터 코드를 저장하는 행위
        - push(원격)    : 로컬 저장소로부터 commit된 코드들을 원격으로 올리기/업로드위한 행위
        - pull : 원격 저장소로부터 다운로드 받는 행위

[버전(VCS)]

[브랜치(branch)/분기]
    - 정의 : 프로젝트를 하나의 저장소에서 각 브랜치마다 서로 다른 저장 상태/버전을 관리 할 수 있도록
             지원하는 기능
    - 목적
        1. 프로젝트 버전관리(배포용, 테스트용 등등)
        2. 협업간의 각 사람들마다 코드를 구분/분류
            - 기본값 브랜치 : master/main
            - master/main
                - 한 사람이 사용하면 문제없지만 여러사람들이 동일한 브랜치로 동일한 저장소를 사용하면
                  관리가 힘듬
    - 생성방법 및 운영
        1. 브랜치 생성
            - 방법1 : 소스제어에서 ···을 누른 후 분기 -> 새분기 만들기
            - 방법2 : VSCode의 오른쪽 하단에 main(브랜치명) 클릭
            - 브랜치명을 웬만하면 영문으로 작성 후 엔터
                - 브랜치생성은 로컬에 생성되었기 때문에 원격저장소에 적용하기위해서는 push
            - 브랜치 생성 후 최초 1번은 push해야 한다.
        2. 로컬에서 브랜치 변경
            - 방법1 : 소스제어에서 ···을 누른 후 분기 -> 분기 다시 지정
            - 방법2 : 오른쪽 하단에 분기명 클릭
            - 브랜치 변경시 현재 상태를 push하는 것이 좋다.

    - 다른 브랜치 상태 가져오기
        - 방법1. 소스제어에서 ···을 누른 후 분기 -> 병합 클릭
        - 같은 파일내 코드이면 병합(충돌)메시지, 병한 에디터 실행
        - 두 브랜치간의 코드들을 확인하면서 결과 코드로 병합하기

        
[브랜치 실습]
    [초대하는 사람]
    1. 프로젝트 생성
    2. 원격저장소에 프로젝트 게시
    3. 웹 저장소 상단메뉴 Settings 클릭
    4. 웹 왼쪽메뉴 Collaborators 클릭 -> add people 클릭
    5. 팀원 git 이름 또는 이메일로 검색해서 초대장

    [초대받은사람]
    1. 초대를 수락
    2. vscode에서 새창열기 -> 원격저장소 복제
    3. 자신의 브랜치 생성

[과제]
    1. 한사람이 프로젝트를 생성하여 index.html을 만들고 원격저장소를 게시한다.
    2. 원격저장소에 다른 사람들을 초대한다.
    3. 모든 조원들은 각 브랜치를 생성한다.
    4. index.html 조원1(애국가1절), 조원2(애국가2절), 조원3(애국가3절)
    5. 원격저장소를 만든 사람이 main브랜치로 이동하여 본인 포함 조원들의 모든 브랜치 상태를 병합한다.
    6. main브랜치를 최신화 했으면(브랜치 병합 1개당 push 1번 권장) 본인 브랜치로 돌아간다.
    7. 각 조원들은 main브랜치를 병합한다.